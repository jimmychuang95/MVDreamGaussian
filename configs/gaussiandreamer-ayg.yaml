name: "gaussiandreamer-mv"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0
 
data_type: "ayg-random-multiview-camera-datamodule"
data:
  load_type: ${system.load_type}
  sd_batch_size: 4
  sd_eval_camera_distance: 4.0
  sd_camera_distance_range: [1.5, 4.0]
  sd_light_sample_strategy: "dreamfusion3dgs"
  sd_height: 1024
  sd_width: 1024
  sd_eval_height: 1024
  sd_eval_width: 1024

  mv_batch_size: 4
  n_view: 4
  mv_width: 512
  mv_height: 512
  mv_camera_distance_range: [0.8, 1.0] # relative
  mv_fovy_range: [15, 60]
  mv_elevation_range: [0, 30]
  mv_n_val_views: 4
  mv_eval_camera_distance: 3.0
  mv_eval_fovy_deg: 40.
  rays_d_normalize: false

system_type: "gaussiandreamer-system"
system:
  load_type: 0 # 0: load from shape, 1: load from smpl
  load_path: "./load/shapes/stand.obj" # only used when load_type == 1
  radius: ${data.eval_camera_distance}
  sh_degree: 0
  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    prompt: ???
    negative_prompt: "ugly, bad anatomy, blurry, pixelated obscure, unnatural colors, poor lighting, dull, and unclear, cropped, lowres, low quality, artifacts, duplicate, morbid, mutilated, poorly drawn face, deformed, dehydrated, bad proportions, unfocused"

  guidance_type: "mvdream-multiview-diffusion-guidance"
  guidance:
    model_name: "sd-v2.1-base-4view"
    ckpt_path: null # path to a pre-downloaded checkpoint file (null for loading from URL)
    guidance_scale: 50.0
    min_step_percent: [0, 0.98, 0.02, 800]  # (start_iter, start_val, end_val, end_iter)
    max_step_percent: [0, 0.98, 0.50, 800]
    recon_loss: true
    recon_std_rescale: 0.5

  loggers:
    wandb:
      enable: false
      project: 'threestudio'
      name: None

  loss:
    lambda_sds: 1.
    lambda_sparsity: 0.0
    lambda_opaque: 0.0
  optimizer:
    name: Adam
    args:
      lr: 0.001
      betas: [0.9, 0.99]
      eps: 1.e-15

trainer:
  max_steps: 1200
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 100
  enable_progress_bar: true
  precision: 16-mixed

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
